Type: Formation de perfectionnement
Sujet: git - the stupid content tracker
Durée: 1 heure
Langue: français
Instructeur: Sébastien Boisvert


== Partie 1: gestion de projets ==

gestion de projet

plusieurs personnes font des contributions

capacité de prendre des "snapshot" de n'importe quel état

un nouvel état est généré lorsque quelqu'un change quelque chose

si personne change rien, l'état ne change pas non plus.



== Partie 2: introduction à git ==

git a été créé par Linus Torvalds (le créateur de Linux) pour gérer le projet
Linux.

site web
	http://git-scm.com/

Maintenant, tout le monde utilise git.

beaucoup utilisé aussi en dehors des projets logiciels

git ne gère pas des répertoires ou des fichiers

il gère du contenu

chaque personne a son propre dépôt git

les changements sont locaux

chaque personne peut pousser ses changements vers d'autres dépôts

chaque personne peut tirer des changements des autres dépôts



== Partie 3: caractéristiques du produit git ==

Distribué 
	http://git-scm.com/about/distributed

Intégrité du contenu 
	http://git-scm.com/about/info-assurance

Branchements et fusions 
	http://git-scm.com/about/branching-and-merging

Très petit et très rapide 
	http://git-scm.com/about/small-and-fast

Copie de travail, mise en scène, dépôt 
	http://git-scm.com/about/staging-area

Code ouvert, logiciel libre, communauté très active
	http://git-scm.com/about/free-and-open-source


== Partie 4: utiliser git ==

Interface graphique
	Disponible dans: Linux, Mac, Windows
	gitx (Apple Mac OS X)
	git gui (Linux, autres?)
	gitk (Linux, autres?)

	http://git-scm.com/downloads/guis

Ligne de commande
	Disponible dans: dans Mac, Linux, BSD, Minix, autres systèmes POSIX, Cygwin dans Windows
	man git
	http://sitaramc.github.com/2-command-line-usage/git-tasks.html



== Partie 5: authentification ==

mots de passe sont inutiles et simples

clés plus complexes



== Partie 6: hébergement de dépôts git ==

github.com (GitHub, Inc.)

bitbucket.org (Atlassian, Inc.)







== Partie 7: exemples pratiques ==

Tout se résume aux actions suivantes:

- soumettre localement des changements
- pousser des changements
- tirer des changements

1.

Créer un dépôt local

Faire des changement sur le dépôt local

Soumettre les changements 

Voir les changements


2.

Cloner ray

Faire des changements bidons

Essayer de pousser les changements


3.

Créer un dépôt sur bitbucket

Cloner le cours-sur-git

Ajouter un dépôt éloigné bitbucket au dépôt local

Pousser les changement

Annuler des changements locales

Tirer les changements





== Partie 8: fonctionnement interne ==

les signatures SHA1

4 types d'objets: tree, commit, blob, tag

2 types de références: branch, tag

le répertoire .git
